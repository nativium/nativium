# variables
IOS_PLATFORM = '9.0'
WATCHOS_PLATFORM = '6.2'
TVOS_PLATFORM = '14.0'
NATIVIUM_LIBRARY_LOCAL_PATH = false
NATIVIUM_LIBRARY_LOCAL_SERVER = false
NATIVIUM_LIBRARY_VERSION = '1.0.0'

# settings
use_frameworks!

# dependencies
def shared_pods

  if NATIVIUM_LIBRARY_LOCAL_PATH
    pod 'nativium', :path => '../../../dist/ios'
  elsif NATIVIUM_LIBRARY_LOCAL_SERVER
    pod 'nativium', :http => 'http://127.0.0.1:8000/dist.tar.gz'
  else
    pod 'nativium', :http => 'https://nativium.s3.amazonaws.com/dist/ios/' + NATIVIUM_LIBRARY_VERSION + '/dist.tar.gz'
  end

end

target 'Runner' do
  platform :ios, IOS_PLATFORM
  shared_pods

  target 'Runner-Tests' do
    # specific pods
  end
end

target 'Runner-WatchExtension' do
  platform :watchos, WATCHOS_PLATFORM
  shared_pods
end

target 'Runner-Tv' do
  platform :tvos, TVOS_PLATFORM
  shared_pods
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['EXCLUDED_ARCHS[sdk=watchsimulator*]'] = 'arm64 i386'
    end
  end
end

post_integrate do |installer|
  project =  installer.aggregate_targets[0].user_project
  project.targets.each do |target|
    target.build_configurations.each do |config|
      if NATIVIUM_LIBRARY_LOCAL_PATH
        config.build_settings["USER_HEADER_SEARCH_PATHS"] = "$(inherited) "

        build_type_dir = Dir.glob("../../../dist/ios/*").first()
        package_dir = Dir.glob("#{build_type_dir}/*").first()
        package_group_dir = Dir.glob("#{package_dir}/*").first()

        config.build_settings["USER_HEADER_SEARCH_PATHS"] << "${PROJECT_DIR}/#{package_group_dir}/nativium.framework/Headers"
      else
        config.build_settings.delete "USER_HEADER_SEARCH_PATHS"
      end
    end
  end

  project.save
end
