// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#import "nativium/core/NTVCoreApplicationCore+Private.h"
#import "nativium/core/NTVCoreApplicationCore.h"
#import "djinni/objc/DJICppWrapperCache+Private.h"
#import "djinni/objc/DJIError.h"
#import "djinni/objc/DJIMarshal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface NTVCoreApplicationCore ()

- (id)initWithCpp:(const std::shared_ptr<::nativium::core::ApplicationCore>&)cppRef;

@end

@implementation NTVCoreApplicationCore {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::nativium::core::ApplicationCore>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::nativium::core::ApplicationCore>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable NTVCoreApplicationCore *)shared {
    try {
        auto objcpp_result_ = ::nativium::core::ApplicationCore::shared();
        return ::djinni_generated::ApplicationCore::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (double)multiply:(double)value1
            value2:(double)value2 {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->multiply(::djinni::F64::toCpp(value1),
                                                            ::djinni::F64::toCpp(value2));
        return ::djinni::F64::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)getVersion {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getVersion();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto ApplicationCore::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto ApplicationCore::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<NTVCoreApplicationCore>(cpp);
}

}  // namespace djinni_generated

@end
